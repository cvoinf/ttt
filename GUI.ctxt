#BlueJ class context
comment0.params=
comment0.target=GUI()
comment0.text=\n\ Konstruktor\n
comment1.params=
comment1.target=void\ VerbindenGeklickt()
comment1.text=\n\ Hier\ wurde\ der\ Knopf\ "Verbinden"\ geklickt,\ wodurch\ dem\ Echoclient\ \u00FCbergeben\ wird,\ mit\ welcher\n\ Ip-Adresse\ und\ welchem\ Port\ man\ sich\ verbinden\ will.\n
comment10.params=
comment10.target=void\ verloren()
comment10.text=\n\ Sei\ jetzt\ blo\u00DF\ kein\ schlechter\ Verlierer.\n
comment2.params=
comment2.target=void\ WuerfelnGeklickt()
comment2.text=\n\ Hier\ k\u00F6nnen\ alle\ ticBoxen\ deaktiviert\ werden.\ Dies\ sollte\ nach\ jedem\ Spielzug\ geschehen.\n
comment3.params=
comment3.target=void\ deaktiviere()
comment4.params=row\ column
comment4.target=void\ aktiviere(int,\ int)
comment4.text=\n\ Hier\ k\u00F6nnen\ spezifische\ ticBoxen\ in\ bigBoxen\ angesteuert\ werden.\ Dazu\ werden\ lediglich\ Zeile\ und\ Spalte\ \u00FCbergeben.\n
comment5.params=
comment5.target=void\ aktiviere()
comment5.text=\n\ Hier\ kann\ das\ gesamte\ Feld\ aktiviert\ werden.\ Dies\ sollte\ lediglich\ als\ Dummy-Funktion\ bereit\ sein.\n
comment6.params=
comment6.target=void\ knopfGeklickt()
comment6.text=\n\ Hier\ wird\ eine\ ticBox\ geklickt.\ Dabei\ wird\ erkannt,\ in\ welcher\ bigBox,\ Reihe\ und\ Spalte\ diese\ liegt,\n\ was\ wiederum\ dem\ Client\ \u00FCbergeben\ wird.\ Im\ Nachhinein\ werden\ alle\ ticBoxen\ deaktiviert.\n
comment7.params=pFeld
comment7.target=void\ aktualisiere(int[][][])
comment7.text=\n\ Das\ gesamte\ Feld\ wird\ aktualisiert,\ indem\ wir\ den\ Inhalt\ der\ ticBoxen\ gleich\ dem\ Array\ vom\ Client\ setzen.\n
comment8.params=pa\ pb
comment8.target=void\ gewuerfelt(int,\ int)
comment8.text=\n\ Yay,\ wir\ haben\ das\ W\u00FCrfelergebnis\ bekommen.\ Ab\ damit\ ins\ Etikett\ und\ aktiviert\ die\ ticBoxen\!\n
comment9.params=
comment9.target=void\ gewonnen()
comment9.text=\n\ Spiel,\ Satz\ und\ Sieg.\n
numComments=11
