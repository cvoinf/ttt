
import sum.komponenten.*;
import sum.werkzeuge.*;
import sum.ereignis.*;

/**
 * Die Klasse SuMAnwendung wurde nicht automatisch erstellt: 
 * 
 * @author Die üblichen Verdächtigen
 * @version 15.01.2014
 */

public class GUI extends EBAnwendung
{
    // Objekte
    //private Etikett hatEtikett1;

    private Knopf ticBox[][][];
    final int startx = 80;
    final int starty = 30;
    final int abstandBoxen = 3;
    final int ticBoxWidth=50;
    final int ticBoxHeight=50;
    final int distance = 5;

    private Knopf reset;
    final double pLinks = 130;
    final double pOben = 100;
    final double pBreite =100;
    final double pHoehe = 30;
    final String pAufschrift = "Reset";

    private Knopf Verbinden;
    final double aLinks=230 ;
    final double aOben = 100;
    final double aBreite =100;
    final double aHoehe = 30;
    final String aAufschrift = "Verbinden";

    private Textfeld textfeldAddresse;
    final double tLinks = 130;
    final double tOben = 50;
    final double tBreite =500;
    final double tHoehe = 30;
    final String tText = "10.68.112.6";

    private Textfeld textfeldPort;
    final double tLinks2 = 130;
    final double tOben2 = 10;
    final double tBreite2 =500;
    final double tHoehe2 = 30;
    final String tText2 = "555";  

    private Etikett wuerfelErgebnis;
    final double cLinks = 130;
    final double cOben = 130;
    final double cBreite = 200;
    final double cHoehe = 30;
    final String cText = "Würfel 1: "+"Würfel 2:";

    private Knopf Würfeln;
    final double bLinks = 330;
    final double bOben = 100;
    final double bBreite = 100;
    final double bHoehe = 30;
    final String bAufschrift = "Würfeln";

    private Echoclient echo;
    // Attribute
    /**
     * Konstruktor
     */
    public GUI()
    {
        //Initialisierung der Oberklasse
        super(1459, 950); 
        int i=0;
        ticBox = new Knopf [12][4][4];
        for(int bigBox = 1; bigBox <=9; bigBox++)
        { for (int column = 1; column<4; column++)
            { for (int row = 1; row < 4; row++)
                {
                    i++;
                    int x=startx+((bigBox+2)%3)*3*(ticBoxWidth+abstandBoxen)+row*(ticBoxWidth);
                    int y= starty+(((int)((bigBox+2)/3.0))*(ticBoxHeight+abstandBoxen))*3+column*(ticBoxHeight);

                    ticBox[bigBox][row][column] = new Knopf(x,y, ticBoxWidth, ticBoxHeight, ""+i, "knopfGeklickt");

                    // Ausrichtung
                    //ticBox.setzeAusrichtung(Ausrichtung.LINKS);
                }  
            }
        }
        //aktiviere();

        reset = new Knopf(pLinks, pOben, pBreite, pHoehe, pAufschrift);
        //Aufgeben = new Knopf(aLinks, aOben, aBreite, aHoehe, aAufschrift);
        Verbinden = new Knopf(aLinks, aOben, aBreite, aHoehe, aAufschrift);
        Verbinden.setzeBearbeiterGeklickt("VerbindenGeklickt");     

        textfeldAddresse = new Textfeld( tLinks, tOben, tBreite, tHoehe, tText);
        textfeldPort = new Textfeld (tLinks2, tOben2, tBreite2, tHoehe2, tText2);

        Würfeln = new Knopf(bLinks, bOben, bBreite, bHoehe, bAufschrift);
        Würfeln.setzeBearbeiterGeklickt("WuerfelnGeklickt");

        wuerfelErgebnis = new Etikett(cLinks,cOben,cBreite,cHoehe,cText);
    }

    /**
     * Vorher: Ereignis GeklicktvonhatVerbinden fand statt.
     * Nachher: (schreiben Sie, was in dieser Methode ausgefuehrt wird)
     */
    public void VerbindenGeklickt()
    {
        echo = new Echoclient(textfeldAddresse.inhaltAlsText(), Integer.parseInt(textfeldPort.inhaltAlsText()), this);
    }
    
    /**
     * Vorher: Ereignis GeklicktvonhatVerbinden fand statt.
     * Nachher: (schreiben Sie, was in dieser Methode ausgefuehrt wird)
     */
    public void WuerfelnGeklickt()
    {
        echo.send("wuerfeln");
    }


    public void deaktiviere()
    { for (int bigBox = 1; bigBox <=9; bigBox++)
        { for (int column = 1; column<4; column++)
            { for (int row = 1; row < 4; row++)
                    ticBox[bigBox][row][column].deaktiviere();
            }
        }
    }

    public void aktiviere(int row,int column)
    {
        for (int bigBox = 1; bigBox <= 9; bigBox++)
        {
            if(Integer.parseInt(ticBox[bigBox][row][column].inhaltAlsText())==0)
            {
                ticBox[bigBox][row][column].aktiviere();
            }
        }
    }

    public void aktiviere()
    {
        for (int bigBox = 1; bigBox <=9; bigBox++)
        { for (int column = 1; column<4; column++)
            { 
                for (int row = 1; row < 4; row++)
                { if(Integer.parseInt(ticBox[bigBox][row][column].inhaltAlsText())==0)
                    {
                        ticBox[bigBox][row][column].aktiviere();

                    }
                }
            }
        }
    }

    public void knopfGeklickt()
    {

        int geklicktBigbox=0;
        int geklicktRow=0;
        int geklicktColumn=0;

        for(int bigBox = 1; bigBox <= 9; bigBox++)
        { for (int column = 1; column<4; column++)
            { for (int row = 1; row < 4; row++)
                {
                    if (ticBox[bigBox] [row] [column].besitztFokus())
                    {
                        geklicktBigbox = bigBox;
                        geklicktRow= row;
                        geklicktColumn=column;
                    }

                    // Ausrichtung
                    //ticBox.setzeAusrichtung(Ausrichtung.LINKS);
                }  
            }
        }

        echo.knopfGedrueckt(geklicktBigbox, geklicktRow, geklicktColumn);
        deaktiviere();
    }

    public void aktualisiere(int pFeld[][][])
    {
        for (int bigBox=1 ; bigBox<=9; bigBox++) 
        {
            for (int column=1; column <=3; column++)
            {
                for (int row=1; row <=3; row ++)
                {
                    ticBox[bigBox][row][column].setzeInhalt(pFeld[bigBox][row][column]);
                }
            }            
        }          
    }

    public void gewuerfelt(int pa, int pb)
    {
        deaktiviere(); 

        int e = pa+pb;
        switch (e) {
            case 3:  aktiviere(1,1);
            break;
            case 4: aktiviere(1,2);
            break;
            case 5: aktiviere(1,3);
            break;
            case 6:  aktiviere(2,1);
            break;
            case 7:  aktiviere(2,2);
            break;
            case 8:  aktiviere(2,3);
            break;
            case 9:  aktiviere(3,1);
            break;
            case 10:  aktiviere(3,2);
            break;
            case 11: aktiviere(3,3);
            break;

        }
    }

    public void gewonnen()
    {

    }

    public void verloren()
    {

    }
}

